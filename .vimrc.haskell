Plugin 'dag/vim2hs'
let g:haskell_conceal = 0
let g:haskell_conceal_enumerations = 0
let g:haskell_tabular = 0
" Plugin 'neovimhaskell/haskell-vim'
" Plugin 'travitch/hasksyn'
" Plugin 'Twinside/vim-haskellConceal'
Plugin 'Twinside/vim-haskellFold'
Plugin 'Twinside/vim-hoogle'
Plugin 'lukerandall/haskellmode-vim'
let g:haskellmode_completion_ghc=0
let g:haskellmode_completion_haddock=0
let g:ghc_symbolcache=1
let g:haddock_browser="firefox.exe"
let g:haddock_docdir='~/.stack/programs/x86_64-linux/ghc-ncurses6-8.0.2/share/doc/ghc-8.0.0/html'
Plugin 'eagletmt/neco-ghc'
Plugin 'eagletmt/ghcmod-vim'
Plugin 'nbouscal/vim-stylish-haskell'
" Use stylish haskell instead of par for haskell buffers
autocmd FileType haskell let &formatprg="stylish-haskell"
autocmd FileType haskell compiler ghc
"Plugin 'Shougo/vimproc'
" if OSX()
    " let g:cumino_default_terminal = "iTerm"
" else

" endif
" Plugin 'adinapoli/cumino'
" Plugin 'bitc/vim-hdevtools'
" Workaround vim-commentary for Haskell
autocmd FileType haskell setlocal commentstring=--\ %s
" Workaround broken colour highlighting in Haskell
autocmd FileType haskell setlocal nospell
autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc
" Type of expression under cursor
nmap <silent> <leader>nt :GhcModType<CR>
nmap <silent> <leader>nr :GhcModTypeClear<CR>
" Insert type of expression under cursor
nmap <silent> <leader>nT :GhcModTypeInsert<CR>
" Hoogle the word under the cursor
nnoremap <silent> <leader>nh :Hoogle<CR>

" Hoogle and prompt for input
nnoremap <leader>nH :Hoogle

" Hoogle for detailed documentation (e.g. "Functor")
nnoremap <silent> <leader>ni :HoogleInfo<CR>

" Hoogle for detailed documentation and prompt for input
nnoremap <leader>nI :HoogleInfo

" Hoogle, close the Hoogle window
nnoremap <silent> <leader>nc :HoogleClose<CR>
" if !executable("ghcmod")
    " autocmd BufWritePost *.hs GhcModCheckAndLintAsync
" endif
" let g:lua_define_omnifunc = 0
" vim:ts=4:sw=4:sts=4 et fdm=marker:
