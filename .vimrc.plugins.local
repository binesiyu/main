" This file will be loaded after .vimrc.plugins,
" but before 'filetype plugin on', 'filetype indent on' and 'syntax on' been executed.
" This file is designed to be safe to add your own plugins and plugins' configuration.

" Add your customized plugins:
" Example: Plugin 'foo/bar/foobar'
" Plugin 'binesiyu/vim-monokia'

Plugin 'moll/vim-bbye'
nnoremap <Leader>bd :Bdelete<CR>
nnoremap <F4> :Bdelete<CR>
" nnoremap <F5> :edit ++ff=dos<CR>

" Plugin 'zhaocai/GoldenView.Vim'

Plugin 'mtth/scratch.vim'
" Window chooser
Plugin 't9md/vim-choosewin'

Plugin 'adimit/prolog.vim'
" invoke with '-'
nnoremap <leader>ww :ChooseWin<CR>
" if you want to use overlay feature
let g:choosewin_overlay_enable = 1
let g:choosewin_statusline_replace = 0 " don't replace statusline

Plugin 'BufOnly.vim'
Plugin 'mileszs/ack.vim'
Plugin 'binesiyu/vim-quick-community'
" Plugin 'vim-scripts/CSApprox'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'benmills/vimux'

Plugin 'roxma/vim-tweak'

nnoremap <expr> <Leader>1 tweak#wtb_switch#key_leader_bufnum(1)
nnoremap <expr> <Leader>2 tweak#wtb_switch#key_leader_bufnum(2)
nnoremap <expr> <Leader>3 tweak#wtb_switch#key_leader_bufnum(3)
nnoremap <expr> <Leader>4 tweak#wtb_switch#key_leader_bufnum(4)
nnoremap <expr> <Leader>5 tweak#wtb_switch#key_leader_bufnum(5)
nnoremap <expr> <Leader>6 tweak#wtb_switch#key_leader_bufnum(6)
nnoremap <expr> <Leader>7 tweak#wtb_switch#key_leader_bufnum(7)
nnoremap <expr> <Leader>8 tweak#wtb_switch#key_leader_bufnum(8)
nnoremap <expr> <Leader>9 tweak#wtb_switch#key_leader_bufnum(9)




func! tweak#wtb_switch#key_leader_bufnum(num)
    let l:buffers = tweak#wtb_switch#buflisted()
    let l:input = a:num . ""

    while 1

        let l:cnt = 0
        let l:i=0
        " count matches
        while l:i<len(l:buffers)
            let l:bn = l:buffers[l:i] . ""
            if l:input==l:bn[0:len(l:input)-1]
                let l:cnt+=1
            endif
            let l:i+=1
        endwhile

        " no matches
        if l:cnt==0 && len(l:input)>0
            echo "no buffer [" . l:input . "]"
            return ''
        elseif l:cnt==1
            return ":b " . l:input . "\<CR>"
        endif

        echo ":b " . l:input

        let l:n = getchar()

        if l:n==char2nr("\<BS>") ||  l:n==char2nr("\<C-h>")
            " delete one word
            if len(l:input)>=2
                let l:input = l:input[0:len(l:input)-2]
            else
                let l:input = ""
            endif
        elseif l:n==char2nr("\<CR>") || (l:n<char2nr('0') || l:n>char2nr('9'))
            return ":b " . l:input . "\<CR>"
        else
            let l:input = l:input . nr2char(l:n)
        endif

        let g:n = l:n

    endwhile
endfunc

func! tweak#wtb_switch#buflisted()
  return filter(range(1, bufnr('$')), 'buflisted(v:val)')
endfunc


Plugin 'vim-scripts/ingo-library'
Plugin 'vim-scripts/SearchHighlighting'
let g:SearchHighlighting_NoJump = 0 
let g:SearchHighlighting_ExtendStandardCommands = 1 
nmap <Leader>*  <Plug>SearchHighlightingGStar 
nmap <Leader>g* <Plug>SearchHighlightingStar 
vmap <Leader>*  <Plug>SearchHighlightingGStar 
