n  <CR>        *@<CR>
n  <SwipeRight>  @:ta<CR>
n  <SwipeLeft>  @:po<CR>
s  <C-H>       * a<BS>
n  <C-H>       * :TmuxNavigateLeft<CR>
s  <Tab>         neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)": "\<Tab>"
n  <NL>        * :TmuxNavigateDown<CR>
n  <C-K>       * :TmuxNavigateUp<CR>
x  <C-K>         <Plug>(neosnippet_expand_target)
s  <C-K>         <Plug>(neosnippet_expand_or_jump)
n  <C-L>       * :TmuxNavigateRight<CR>
s  <CR>        * a<BS>
nox<CR>          <Plug>(wildfire-fuel)
x  <C-N>       * :<C-U>call multiple_cursors#new("v", 0)<CR>
n  <C-N>       * :call multiple_cursors#new("n", 1)<CR>
n  <C-P>       * :<C-U>CtrlPBuffer<CR>
n  <C-\>       * :TmuxNavigatePrevious<CR>
o  %           * v:<C-U>call <SNR>40_Match_wrapper('',1,'o') <CR>
x  %           * :<C-U>call <SNR>40_Match_wrapper('',1,'v') <CR>m'gv``
n  %           * :<C-U>call <SNR>40_Match_wrapper('',1,'n') <CR>
n  ,fc         * :EXProjectFind<CR>
n  ,bb         * :call exqfix#build('')<CR>
n  ,ca           <Plug>NERDCommenterAltDelims
n  ,cb           <Plug>NERDCommenterAlignBoth
x  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cA           <Plug>NERDCommenterAppend
x  ,cy           <Plug>NERDCommenterYank
n  ,cy           <Plug>NERDCommenterYank
x  ,cs           <Plug>NERDCommenterSexy
n  ,cs           <Plug>NERDCommenterSexy
x  ,ci           <Plug>NERDCommenterInvert
n  ,ci           <Plug>NERDCommenterInvert
n  ,c$           <Plug>NERDCommenterToEOL
x  ,cn           <Plug>NERDCommenterNested
n  ,cn           <Plug>NERDCommenterNested
x  ,cm           <Plug>NERDCommenterMinimal
n  ,cm           <Plug>NERDCommenterMinimal
x  ,c<Space>     <Plug>NERDCommenterToggle
n  ,c<Space>     <Plug>NERDCommenterToggle
x  ,cc           <Plug>NERDCommenterComment
n  ,cc           <Plug>NERDCommenterComment
n  ,cr           <Plug>CRV_CRefVimNormal
x  ,cr           <Plug>CRV_CRefVimVisual
nox,mm           :ShowMarksPlaceMark<CR>
nox,ma           :ShowMarksClearAll<CR>
nox,mh           :ShowMarksClearMark<CR>
nox,mo           :ShowMarksOn<CR>
nox,mt           :ShowMarksToggle<CR>
n  ,ig           <Plug>IndentGuidesToggle
n  ,yi         * :call SynStack()<CR>
nox,vr         * :source $HOME/.vimrc<CR>
nox,ve         * :call <SNR>35_EditVimrc13Config()<CR>
n  ,bl           :buffers<CR>:let nr = input("Which one: ")|exe "buffer " . nr<CR>
n  ,fw           [I:let nr = input("Which one: ")|exe "normal " . nr ."[\t"<CR>
n  ,f9           :set foldlevel=9<CR>
n  ,f8           :set foldlevel=8<CR>
n  ,f7           :set foldlevel=7<CR>
n  ,f6           :set foldlevel=6<CR>
n  ,f5           :set foldlevel=5<CR>
n  ,f4           :set foldlevel=4<CR>
n  ,f3           :set foldlevel=3<CR>
n  ,f2           :set foldlevel=2<CR>
n  ,f1           :set foldlevel=1<CR>
n  ,f0           :set foldlevel=0<CR>
n  ,sw         * "_yiw:s/\(\%#\w\+\)\(\W\+\)\(\w\+\)/\3\2\1/<CR><C-O>
n  ,wm         * <C-W>_
n  ,wl         * <C-W><Right>
n  ,wh         * <C-W><Left>
n  ,wj         * <C-W><Down>
n  ,wk         * <C-W><Up>
n  ,/            :nohlsearch<CR>
n  ,y3         * :let @*=fnamemodify(bufname('%'),":p")<CR>
n  ,y2         * :let @*=fnamemodify(bufname('%'),":p:t")<CR>
n  ,y1         * :let @*=fnamemodify(bufname('%'),":p:h")<CR>
n  ,9          * tweak#wtb_switch#key_leader_bufnum(9)
n  ,8          * tweak#wtb_switch#key_leader_bufnum(8)
n  ,7          * tweak#wtb_switch#key_leader_bufnum(7)
n  ,6          * tweak#wtb_switch#key_leader_bufnum(6)
n  ,5          * tweak#wtb_switch#key_leader_bufnum(5)
n  ,4          * tweak#wtb_switch#key_leader_bufnum(4)
n  ,3          * tweak#wtb_switch#key_leader_bufnum(3)
n  ,2          * tweak#wtb_switch#key_leader_bufnum(2)
n  ,1          * tweak#wtb_switch#key_leader_bufnum(1)
n  ,ww         * :ChooseWin<CR>
n  ,u          * :UndotreeToggle<CR>
nox,nn           <Plug>NERDTreeTabsToggle<CR>
n  ,fa         * :Ack<CR>
n  ,fl         * :CtrlPMRUFiles<CR>
n  ,fr         * :CtrlPMRU<CR>
n  ,ff         * :CtrlP<CR>
n  ,fb         * :CtrlPBuffer<CR>
n  ,fu         * :CtrlPFunky<CR>
n  ,fg         * :CtrlPBranch<CR>
n  ,fm         * :CtrlPModified<CR>
x  ,=          * :call g:Tabular(0)<CR>
n  ,=          * :call g:Tabular(1)<CR>
v  ,a|           :Tabularize /|<CR>
n  ,a|           :Tabularizd /|<CR>
x  ,a,,          :Tabularize /,\zs<CR>
n  ,a,,          :Tabularize /,\zs<CR>
x  ,a,           :Tabularize /,<CR>
n  ,a,           :Tabularize /,<CR>
x  ,a::          :Tabularize /:\zs<CR>
n  ,a::          :Tabularize /:\zs<CR>
x  ,a:           :Tabularize /:<CR>
n  ,a:           :Tabularize /:<CR>
x  ,a=>          :Tabularize /=><CR>
n  ,a=>          :Tabularize /=><CR>
x  ,a=           :Tabularize /^[^=]*\zs=<CR>
n  ,a=           :Tabularize /^[^=]*\zs=<CR>
x  ,a&           :Tabularize /&<CR>
n  ,a&           :Tabularize /&<CR>
n  ,k4         * :EasyhlCancel 4<CR>
n  ,k3         * :EasyhlCancel 3<CR>
n  ,k2         * :EasyhlCancel 2<CR>
n  ,k1         * :EasyhlCancel 1<CR>
n  ,k0         * :EasyhlCancel 0<CR>
n  ,j0         * :EasyhlCancel 0<CR>
x  ,j4         * :EasyhlRange 4<CR>
x  ,j3         * :EasyhlRange 3<CR>
x  ,j2         * :EasyhlRange 2<CR>
x  ,j1         * :EasyhlRange 1<CR>
n  ,j4         * :EasyhlWord 4<CR>
n  ,j3         * :EasyhlWord 3<CR>
n  ,j2         * :EasyhlWord 2<CR>
n  ,j1         * :EasyhlWord 1<CR>
n  ,qq         * :EXQFixPaste<CR>
n  ,qf         * :EXQFixToggle<CR>
n  ,dg         * :CSGD<CR>
n  ,di         * :CSID<CR>
n  ,dc         * :CSCD<CR>
n  ,dd         * :CSDD<CR>
n  ,ds         * :EXCSToggle<CR>
n  ,ss         * :EXSymbolCWord<CR>
n  ,st         * :EXSymbolToggle<CR>
n  ,sl         * :EXSymbolList<CR>
n  ,tt         * :EXTagsCWord<CR>
n  ,ts         * :EXTagsToggle<CR>
n  ,F          * :GS<Space>
n  ,gg         * :EXGSearchCWord<CR>
n  ,gs         * :EXGSearchToggle<CR>
n  ,<Esc>        :EXgp<CR><Esc>
n  ,<Tab>      * :EXsw<CR>
n  ,h          * :EXbp<CR>
n  ,l          * :EXbn<CR>
n  ,bd         * :Bdelete<CR>
n  ,K            :call <SNR>7_PreGetPage(0)<CR>
n  /             <Plug>StartSearch
x  ;           * :
no ;           * :
x  <           * <gv
x  >           * >gv
noxQ             =
x  S             <Plug>VSurround
o  [z          * '<Esc>:<C-U>call <SNR>120_UpdateWin(0)<CR>' . '"' . v:register . v:operator . v:count1 . '[z'
x  [z          * ':<C-U>call <SNR>120_UpdateWin(0)<CR>gv'.v:count.'[z'
n  [z          * ':<C-U>call <SNR>120_UpdateWin(0)<CR>'.v:count.'[z'
n  [C            9999[c
n  [c            <Plug>(signify-prev-hunk)
o  [%          * v:<C-U>call <SNR>40_MultiMatch("bW", "o") <CR>
x  [%            <Esc>[%m'gv``
n  [%          * :<C-U>call <SNR>40_MultiMatch("bW", "n") <CR>
nox\sm         & m
o  ]z          * '<Esc>:<C-U>call <SNR>120_UpdateWin(0)<CR>' . '"' . v:register . v:operator . v:count1 . ']z'
x  ]z          * ':<C-U>call <SNR>120_UpdateWin(0)<CR>gv'.v:count.']z'
n  ]z          * ':<C-U>call <SNR>120_UpdateWin(0)<CR>'.v:count.']z'
n  ]C            9999]c
n  ]c            <Plug>(signify-next-hunk)
o  ]%          * v:<C-U>call <SNR>40_MultiMatch("W",  "o") <CR>
x  ]%            <Esc>]%m'gv``
n  ]%          * :<C-U>call <SNR>40_MultiMatch("W",  "n") <CR>
o  ai            <Plug>(textobj-indent-a)
x  ai            <Plug>(textobj-indent-a)
o  aI            <Plug>(textobj-indent-same-a)
x  aI            <Plug>(textobj-indent-same-a)
x  a%            <Esc>[%v]%
n  cS            <Plug>CSurround
n  cs            <Plug>Csurround
n  ds            <Plug>Dsurround
n  f.            <Plug>(easymotion-repeat)
n  fh            <Plug>(easymotion-linebackward)
n  fl            <Plug>(easymotion-lineforward)
n  fk            <Plug>(easymotion-k)
n  fj            <Plug>(easymotion-j)
n  ff            <Plug>(easymotion-sn)
n  f             <Plug>(easymotion-prefix)
x  gx            <Plug>NetrwBrowseXVis
n  gx            <Plug>NetrwBrowseX
n  gZzZz       * gs
x  gs            <Plug>(scratch-selection-reuse)
n  gS            <Plug>(scratch-insert-clear)
n  gs            <Plug>(scratch-insert-reuse)
x  gS            <Plug>(scratch-selection-clear)
o  g%          * v:<C-U>call <SNR>40_Match_wrapper('',0,'o') <CR>
x  g%          * :<C-U>call <SNR>40_Match_wrapper('',0,'v') <CR>m'gv``
n  g%          * :<C-U>call <SNR>40_Match_wrapper('',0,'n') <CR>
o  ii            <Plug>(textobj-indent-i)
x  ii            <Plug>(textobj-indent-i)
o  iI            <Plug>(textobj-indent-same-i)
x  iI            <Plug>(textobj-indent-same-i)
n  m           * :call <SNR>66_ShowMarksPlaceMark( nr2char(getchar()) )<CR>
n  ySS           <Plug>YSsurround
n  ySs           <Plug>YSsurround
n  yss           <Plug>Yssurround
n  yS            <Plug>YSurround
n  ys            <Plug>Ysurround
o  zk          * '<Esc>:<C-U>call <SNR>120_UpdateWin(0)<CR>' . '"' . v:register . v:operator . v:count1 . 'zk'
x  zk          * ':<C-U>call <SNR>120_UpdateWin(0)<CR>gv'.v:count.'zk'
n  zk          * ':<C-U>call <SNR>120_UpdateWin(0)<CR>'.v:count.'zk'
o  zj          * '<Esc>:<C-U>call <SNR>120_UpdateWin(0)<CR>' . '"' . v:register . v:operator . v:count1 . 'zj'
x  zj          * ':<C-U>call <SNR>120_UpdateWin(0)<CR>gv'.v:count.'zj'
n  zj          * ':<C-U>call <SNR>120_UpdateWin(0)<CR>'.v:count.'zj'
n  zC          * :<C-U>call <SNR>120_UpdateWin(0)<CR>zC
n  zc          * :<C-U>call <SNR>120_UpdateWin(0)<CR>zc
n  zO          * :<C-U>call <SNR>120_UpdateWin(0)<CR>zO
n  zo          * :<C-U>call <SNR>120_UpdateWin(0)<CR>zo
n  zA          * :<C-U>call <SNR>120_UpdateWin(0)<CR>zA
n  za          * :<C-U>call <SNR>120_UpdateWin(0)<CR>za
n  zX          * :<C-U>call <SNR>120_UpdateWin(0)<CR>zX
n  zx          * :<C-U>call <SNR>120_UpdateWin(0)<CR>zx
n  zuz           <Plug>(FastFoldUpdate)
n  <Plug>(over-restore-nohlsearch) * (mode() =~ '[iR]' ? "\<C-O>" : "") . ":nohlsearch\<CR>"
n  <Plug>(over-restore-search-pattern) * (mode() =~ '[iR]' ? "\<C-O>" : "") . ":let @/ = " . string(s:old_search_pattern) . "\<CR>"
s  <Del>       * a<BS>
s  <BS>        * a<BS>
   <F6>          :call RunPlayer("false")<CR>
   <F5>          :call RunPlayer("true")<CR>
   <M-Down>    * }
   <D-Down>    * <C-End>
   <M-Up>      * {
   <D-Up>      * <C-Home>
   <M-Right>   * <C-Right>
   <D-Right>   * <End>
   <M-Left>    * <C-Left>
   <D-Left>    * <Home>
v  <Plug>NetrwBrowseXVis * :<C-U>call netrw#BrowseXVis()<CR>
n  <Plug>NetrwBrowseX * :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())<CR>
n  <Plug>(choosewin) * :<C-U>call choosewin#start(range(1, winnr('$')))<CR>
x  <Plug>(scratch-selection-clear) * :<C-U>call scratch#selection(1)<CR>
x  <Plug>(scratch-selection-reuse) * :<C-U>call scratch#selection(0)<CR>
n  <Plug>(scratch-insert-clear) * :call scratch#insert(1)<CR>
n  <Plug>(scratch-insert-reuse) * :call scratch#insert(0)<CR>
n  <SNR>129_:  * :<C-U><C-R>=v:count ? v:count : ''<CR>
v  <Plug>VgSurround * :<C-U>call <SNR>125_opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>
v  <Plug>VSurround * :<C-U>call <SNR>125_opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>
n  <Plug>YSurround * :<C-U>set opfunc=<SNR>125_opfunc2<CR>g@
n  <Plug>Ysurround * :<C-U>set opfunc=<SNR>125_opfunc<CR>g@
n  <Plug>YSsurround * :<C-U>call <SNR>125_opfunc2(v:count1)<CR>
n  <Plug>Yssurround * :<C-U>call <SNR>125_opfunc(v:count1)<CR>
n  <Plug>CSurround * :<C-U>call <SNR>125_changesurround(1)<CR>
n  <Plug>Csurround * :<C-U>call <SNR>125_changesurround()<CR>
n  <Plug>Dsurround * :<C-U>call <SNR>125_dosurround(<SNR>125_inputtarget())<CR>
n  <Plug>SurroundRepeat * .
n  <Plug>(easymotion-prefix)N   <Plug>(easymotion-N)
n  <Plug>(easymotion-prefix)n   <Plug>(easymotion-n)
n  <Plug>(easymotion-prefix)gE   <Plug>(easymotion-gE)
n  <Plug>(easymotion-prefix)ge   <Plug>(easymotion-ge)
n  <Plug>(easymotion-prefix)E   <Plug>(easymotion-E)
n  <Plug>(easymotion-prefix)e   <Plug>(easymotion-e)
n  <Plug>(easymotion-prefix)B   <Plug>(easymotion-B)
n  <Plug>(easymotion-prefix)b   <Plug>(easymotion-b)
n  <Plug>(easymotion-prefix)W   <Plug>(easymotion-W)
n  <Plug>(easymotion-prefix)w   <Plug>(easymotion-w)
n  <Plug>(easymotion-prefix)T   <Plug>(easymotion-T)
n  <Plug>(easymotion-prefix)t   <Plug>(easymotion-t)
n  <Plug>(easymotion-prefix)s   <Plug>(easymotion-s)
n  <Plug>(easymotion-prefix)F   <Plug>(easymotion-F)
n  <Plug>(easymotion-prefix)f   <Plug>(easymotion-f)
x  <Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(1)<CR>
nos<Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(0)<CR>
   <Plug>(easymotion-dotrepeat) * :<C-U>call EasyMotion#DotRepeat()<CR>
x  <Plug>(easymotion-repeat) * <Esc>:<C-U>call EasyMotion#Repeat(1)<CR>
nos<Plug>(easymotion-repeat) * :<C-U>call EasyMotion#Repeat(0)<CR>
x  <Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(1,1)<CR>
nos<Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(0,1)<CR>
x  <Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(1,0)<CR>
nos<Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(0,0)<CR>
x  <Plug>(easymotion-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,0)<CR>
nos<Plug>(easymotion-wl) * :<C-U>call EasyMotion#WBL(0,0)<CR>
x  <Plug>(easymotion-lineforward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,0)<CR>
nos<Plug>(easymotion-lineforward) * :<C-U>call EasyMotion#LineAnywhere(0,0)<CR>
x  <Plug>(easymotion-lineanywhere) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,2)<CR>
nos<Plug>(easymotion-lineanywhere) * :<C-U>call EasyMotion#LineAnywhere(0,2)<CR>
x  <Plug>(easymotion-bd-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,2)<CR>
nos<Plug>(easymotion-bd-wl) * :<C-U>call EasyMotion#WBL(0,2)<CR>
x  <Plug>(easymotion-linebackward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,1)<CR>
nos<Plug>(easymotion-linebackward) * :<C-U>call EasyMotion#LineAnywhere(0,1)<CR>
x  <Plug>(easymotion-bl) * <Esc>:<C-U>call EasyMotion#WBL(1,1)<CR>
nos<Plug>(easymotion-bl) * :<C-U>call EasyMotion#WBL(0,1)<CR>
x  <Plug>(easymotion-el) * <Esc>:<C-U>call EasyMotion#EL(1,0)<CR>
nos<Plug>(easymotion-el) * :<C-U>call EasyMotion#EL(0,0)<CR>
x  <Plug>(easymotion-gel) * <Esc>:<C-U>call EasyMotion#EL(1,1)<CR>
nos<Plug>(easymotion-gel) * :<C-U>call EasyMotion#EL(0,1)<CR>
x  <Plug>(easymotion-bd-el) * <Esc>:<C-U>call EasyMotion#EL(1,2)<CR>
nos<Plug>(easymotion-bd-el) * :<C-U>call EasyMotion#EL(0,2)<CR>
x  <Plug>(easymotion-jumptoanywhere) * <Esc>:<C-U>call EasyMotion#JumpToAnywhere(1,2)<CR>
nos<Plug>(easymotion-jumptoanywhere) * :<C-U>call EasyMotion#JumpToAnywhere(0,2)<CR>
x  <Plug>(easymotion-vim-n) * <Esc>:<C-U>call EasyMotion#Search(1,0,1)<CR>
nos<Plug>(easymotion-vim-n) * :<C-U>call EasyMotion#Search(0,0,1)<CR>
x  <Plug>(easymotion-n) * <Esc>:<C-U>call EasyMotion#Search(1,0,0)<CR>
nos<Plug>(easymotion-n) * :<C-U>call EasyMotion#Search(0,0,0)<CR>
x  <Plug>(easymotion-bd-n) * <Esc>:<C-U>call EasyMotion#Search(1,2,0)<CR>
nos<Plug>(easymotion-bd-n) * :<C-U>call EasyMotion#Search(0,2,0)<CR>
x  <Plug>(easymotion-vim-N) * <Esc>:<C-U>call EasyMotion#Search(1,1,1)<CR>
nos<Plug>(easymotion-vim-N) * :<C-U>call EasyMotion#Search(0,1,1)<CR>
x  <Plug>(easymotion-N) * <Esc>:<C-U>call EasyMotion#Search(1,1,0)<CR>
nos<Plug>(easymotion-N) * :<C-U>call EasyMotion#Search(0,1,0)<CR>
x  <Plug>(easymotion-eol-j) * <Esc>:<C-U>call EasyMotion#Eol(1,0)<CR>
nos<Plug>(easymotion-eol-j) * :<C-U>call EasyMotion#Eol(0,0)<CR>
x  <Plug>(easymotion-sol-k) * <Esc>:<C-U>call EasyMotion#Sol(1,1)<CR>
nos<Plug>(easymotion-sol-k) * :<C-U>call EasyMotion#Sol(0,1)<CR>
x  <Plug>(easymotion-sol-j) * <Esc>:<C-U>call EasyMotion#Sol(1,0)<CR>
nos<Plug>(easymotion-sol-j) * :<C-U>call EasyMotion#Sol(0,0)<CR>
x  <Plug>(easymotion-k) * <Esc>:<C-U>call EasyMotion#JK(1,1)<CR>
nos<Plug>(easymotion-k) * :<C-U>call EasyMotion#JK(0,1)<CR>
x  <Plug>(easymotion-j) * <Esc>:<C-U>call EasyMotion#JK(1,0)<CR>
nos<Plug>(easymotion-j) * :<C-U>call EasyMotion#JK(0,0)<CR>
x  <Plug>(easymotion-bd-jk) * <Esc>:<C-U>call EasyMotion#JK(1,2)<CR>
nos<Plug>(easymotion-bd-jk) * :<C-U>call EasyMotion#JK(0,2)<CR>
x  <Plug>(easymotion-eol-bd-jk) * <Esc>:<C-U>call EasyMotion#Eol(1,2)<CR>
nos<Plug>(easymotion-eol-bd-jk) * :<C-U>call EasyMotion#Eol(0,2)<CR>
x  <Plug>(easymotion-sol-bd-jk) * <Esc>:<C-U>call EasyMotion#Sol(1,2)<CR>
nos<Plug>(easymotion-sol-bd-jk) * :<C-U>call EasyMotion#Sol(0,2)<CR>
x  <Plug>(easymotion-eol-k) * <Esc>:<C-U>call EasyMotion#Eol(1,1)<CR>
nos<Plug>(easymotion-eol-k) * :<C-U>call EasyMotion#Eol(0,1)<CR>
x  <Plug>(easymotion-iskeyword-ge) * <Esc>:<C-U>call EasyMotion#EK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-ge) * :<C-U>call EasyMotion#EK(0,1)<CR>
x  <Plug>(easymotion-w) * <Esc>:<C-U>call EasyMotion#WB(1,0)<CR>
nos<Plug>(easymotion-w) * :<C-U>call EasyMotion#WB(0,0)<CR>
x  <Plug>(easymotion-bd-W) * <Esc>:<C-U>call EasyMotion#WBW(1,2)<CR>
nos<Plug>(easymotion-bd-W) * :<C-U>call EasyMotion#WBW(0,2)<CR>
x  <Plug>(easymotion-iskeyword-w) * <Esc>:<C-U>call EasyMotion#WBK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-w) * :<C-U>call EasyMotion#WBK(0,0)<CR>
x  <Plug>(easymotion-gE) * <Esc>:<C-U>call EasyMotion#EW(1,1)<CR>
nos<Plug>(easymotion-gE) * :<C-U>call EasyMotion#EW(0,1)<CR>
x  <Plug>(easymotion-e) * <Esc>:<C-U>call EasyMotion#E(1,0)<CR>
nos<Plug>(easymotion-e) * :<C-U>call EasyMotion#E(0,0)<CR>
x  <Plug>(easymotion-bd-E) * <Esc>:<C-U>call EasyMotion#EW(1,2)<CR>
nos<Plug>(easymotion-bd-E) * :<C-U>call EasyMotion#EW(0,2)<CR>
x  <Plug>(easymotion-iskeyword-e) * <Esc>:<C-U>call EasyMotion#EK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-e) * :<C-U>call EasyMotion#EK(0,0)<CR>
x  <Plug>(easymotion-b) * <Esc>:<C-U>call EasyMotion#WB(1,1)<CR>
nos<Plug>(easymotion-b) * :<C-U>call EasyMotion#WB(0,1)<CR>
x  <Plug>(easymotion-iskeyword-b) * <Esc>:<C-U>call EasyMotion#WBK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-b) * :<C-U>call EasyMotion#WBK(0,1)<CR>
x  <Plug>(easymotion-iskeyword-bd-w) * <Esc>:<C-U>call EasyMotion#WBK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-w) * :<C-U>call EasyMotion#WBK(0,2)<CR>
x  <Plug>(easymotion-W) * <Esc>:<C-U>call EasyMotion#WBW(1,0)<CR>
nos<Plug>(easymotion-W) * :<C-U>call EasyMotion#WBW(0,0)<CR>
x  <Plug>(easymotion-bd-w) * <Esc>:<C-U>call EasyMotion#WB(1,2)<CR>
nos<Plug>(easymotion-bd-w) * :<C-U>call EasyMotion#WB(0,2)<CR>
x  <Plug>(easymotion-iskeyword-bd-e) * <Esc>:<C-U>call EasyMotion#EK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-e) * :<C-U>call EasyMotion#EK(0,2)<CR>
x  <Plug>(easymotion-ge) * <Esc>:<C-U>call EasyMotion#E(1,1)<CR>
nos<Plug>(easymotion-ge) * :<C-U>call EasyMotion#E(0,1)<CR>
x  <Plug>(easymotion-E) * <Esc>:<C-U>call EasyMotion#EW(1,0)<CR>
nos<Plug>(easymotion-E) * :<C-U>call EasyMotion#EW(0,0)<CR>
x  <Plug>(easymotion-bd-e) * <Esc>:<C-U>call EasyMotion#E(1,2)<CR>
nos<Plug>(easymotion-bd-e) * :<C-U>call EasyMotion#E(0,2)<CR>
x  <Plug>(easymotion-B) * <Esc>:<C-U>call EasyMotion#WBW(1,1)<CR>
nos<Plug>(easymotion-B) * :<C-U>call EasyMotion#WBW(0,1)<CR>
n  <Plug>(easymotion-overwin-w) * :<C-U>call EasyMotion#overwin#w()<CR>
n  <Plug>(easymotion-overwin-line) * :<C-U>call EasyMotion#overwin#line()<CR>
n  <Plug>(easymotion-overwin-f2) * :<C-U>call EasyMotion#OverwinF(2)<CR>
n  <Plug>(easymotion-overwin-f) * :<C-U>call EasyMotion#OverwinF(1)<CR>
x  <Plug>(easymotion-Tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,1)<CR>
nos<Plug>(easymotion-Tln) * :<C-U>call EasyMotion#TL(-1,0,1)<CR>
x  <Plug>(easymotion-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,0)<CR>
nos<Plug>(easymotion-t2) * :<C-U>call EasyMotion#T(2,0,0)<CR>
x  <Plug>(easymotion-t) * <Esc>:<C-U>call EasyMotion#T(1,1,0)<CR>
nos<Plug>(easymotion-t) * :<C-U>call EasyMotion#T(1,0,0)<CR>
x  <Plug>(easymotion-s) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-s) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,0)<CR>
nos<Plug>(easymotion-tn) * :<C-U>call EasyMotion#T(-1,0,0)<CR>
x  <Plug>(easymotion-bd-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,2)<CR>
nos<Plug>(easymotion-bd-t2) * :<C-U>call EasyMotion#T(2,0,2)<CR>
x  <Plug>(easymotion-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,0)<CR>
nos<Plug>(easymotion-tl) * :<C-U>call EasyMotion#TL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tn) * :<C-U>call EasyMotion#T(-1,0,2)<CR>
x  <Plug>(easymotion-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,0)<CR>
nos<Plug>(easymotion-fn) * :<C-U>call EasyMotion#S(-1,0,0)<CR>
x  <Plug>(easymotion-bd-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,2)<CR>
nos<Plug>(easymotion-bd-tl) * :<C-U>call EasyMotion#TL(1,0,2)<CR>
x  <Plug>(easymotion-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,0)<CR>
nos<Plug>(easymotion-fl) * :<C-U>call EasyMotion#SL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,2)<CR>
nos<Plug>(easymotion-bd-tl2) * :<C-U>call EasyMotion#TL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-f) * <Esc>:<C-U>call EasyMotion#S(1,1,0)<CR>
nos<Plug>(easymotion-f) * :<C-U>call EasyMotion#S(1,0,0)<CR>
x  <Plug>(easymotion-bd-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-bd-fl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,1)<CR>
nos<Plug>(easymotion-Fl2) * :<C-U>call EasyMotion#SL(2,0,1)<CR>
x  <Plug>(easymotion-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,0)<CR>
nos<Plug>(easymotion-tl2) * :<C-U>call EasyMotion#TL(2,0,0)<CR>
x  <Plug>(easymotion-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,0)<CR>
nos<Plug>(easymotion-f2) * :<C-U>call EasyMotion#S(2,0,0)<CR>
x  <Plug>(easymotion-Fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,1)<CR>
nos<Plug>(easymotion-Fln) * :<C-U>call EasyMotion#SL(-1,0,1)<CR>
x  <Plug>(easymotion-sln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-sln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,0)<CR>
nos<Plug>(easymotion-tln) * :<C-U>call EasyMotion#TL(-1,0,0)<CR>
x  <Plug>(easymotion-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,0)<CR>
nos<Plug>(easymotion-fl2) * :<C-U>call EasyMotion#SL(2,0,0)<CR>
x  <Plug>(easymotion-bd-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-bd-fl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-T2) * <Esc>:<C-U>call EasyMotion#T(2,1,1)<CR>
nos<Plug>(easymotion-T2) * :<C-U>call EasyMotion#T(2,0,1)<CR>
x  <Plug>(easymotion-bd-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tln) * :<C-U>call EasyMotion#TL(-1,0,2)<CR>
x  <Plug>(easymotion-T) * <Esc>:<C-U>call EasyMotion#T(1,1,1)<CR>
nos<Plug>(easymotion-T) * :<C-U>call EasyMotion#T(1,0,1)<CR>
x  <Plug>(easymotion-bd-t) * <Esc>:<C-U>call EasyMotion#T(1,1,2)<CR>
nos<Plug>(easymotion-bd-t) * :<C-U>call EasyMotion#T(1,0,2)<CR>
x  <Plug>(easymotion-Tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,1)<CR>
nos<Plug>(easymotion-Tn) * :<C-U>call EasyMotion#T(-1,0,1)<CR>
x  <Plug>(easymotion-s2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-s2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,1)<CR>
nos<Plug>(easymotion-Tl) * :<C-U>call EasyMotion#TL(1,0,1)<CR>
x  <Plug>(easymotion-sn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-sn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-Fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,1)<CR>
nos<Plug>(easymotion-Fn) * :<C-U>call EasyMotion#S(-1,0,1)<CR>
x  <Plug>(easymotion-sl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-sl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,1)<CR>
nos<Plug>(easymotion-Fl) * :<C-U>call EasyMotion#SL(1,0,1)<CR>
x  <Plug>(easymotion-sl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-sl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-F) * <Esc>:<C-U>call EasyMotion#S(1,1,1)<CR>
nos<Plug>(easymotion-F) * :<C-U>call EasyMotion#S(1,0,1)<CR>
x  <Plug>(easymotion-bd-f) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-bd-f) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-F2) * <Esc>:<C-U>call EasyMotion#S(2,1,1)<CR>
nos<Plug>(easymotion-F2) * :<C-U>call EasyMotion#S(2,0,1)<CR>
x  <Plug>(easymotion-bd-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-bd-f2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,1)<CR>
nos<Plug>(easymotion-Tl2) * :<C-U>call EasyMotion#TL(2,0,1)<CR>
x  <Plug>(easymotion-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,0)<CR>
nos<Plug>(easymotion-fln) * :<C-U>call EasyMotion#SL(-1,0,0)<CR>
n  <Plug>(FastFoldUpdate) * :<C-U>FastFoldUpdate!<CR>
x  <Plug>(neosnippet_register_oneshot_snippet) * :<C-U>call neosnippet#mappings#_register_oneshot_snippet()<CR>
x  <Plug>(neosnippet_expand_target) * :<C-U>call neosnippet#mappings#_expand_target()<CR>
x  <Plug>(neosnippet_get_selected_text) * :call neosnippet#helpers#get_selected_text(visualmode(), 1)<CR>
s  <Plug>(neosnippet_jump) * neosnippet#mappings#jump_impl()
s  <Plug>(neosnippet_expand) * neosnippet#mappings#expand_impl()
s  <Plug>(neosnippet_jump_or_expand) * neosnippet#mappings#jump_or_expand_impl()
s  <Plug>(neosnippet_expand_or_jump) * neosnippet#mappings#expand_or_jump_impl()
n  <Plug>NERDCommenterAltDelims * :call <SNR>100_SwitchToAlternativeDelimiters(1)<CR>
x  <Plug>NERDCommenterUncomment * :call NERDComment("x", "Uncomment")<CR>
n  <Plug>NERDCommenterUncomment * :call NERDComment("n", "Uncomment")<CR>
x  <Plug>NERDCommenterAlignBoth * :call NERDComment("x", "AlignBoth")<CR>
n  <Plug>NERDCommenterAlignBoth * :call NERDComment("n", "AlignBoth")<CR>
x  <Plug>NERDCommenterAlignLeft * :call NERDComment("x", "AlignLeft")<CR>
n  <Plug>NERDCommenterAlignLeft * :call NERDComment("n", "AlignLeft")<CR>
n  <Plug>NERDCommenterAppend * :call NERDComment("n", "Append")<CR>
x  <Plug>NERDCommenterYank * :call NERDComment("x", "Yank")<CR>
n  <Plug>NERDCommenterYank * :call NERDComment("n", "Yank")<CR>
x  <Plug>NERDCommenterSexy * :call NERDComment("x", "Sexy")<CR>
n  <Plug>NERDCommenterSexy * :call NERDComment("n", "Sexy")<CR>
x  <Plug>NERDCommenterInvert * :call NERDComment("x", "Invert")<CR>
n  <Plug>NERDCommenterInvert * :call NERDComment("n", "Invert")<CR>
n  <Plug>NERDCommenterToEOL * :call NERDComment("n", "ToEOL")<CR>
x  <Plug>NERDCommenterNested * :call NERDComment("x", "Nested")<CR>
n  <Plug>NERDCommenterNested * :call NERDComment("n", "Nested")<CR>
x  <Plug>NERDCommenterMinimal * :call NERDComment("x", "Minimal")<CR>
n  <Plug>NERDCommenterMinimal * :call NERDComment("n", "Minimal")<CR>
x  <Plug>NERDCommenterToggle * :call NERDComment("x", "Toggle")<CR>
n  <Plug>NERDCommenterToggle * :call NERDComment("n", "Toggle")<CR>
x  <Plug>NERDCommenterComment * :call NERDComment("x", "Comment")<CR>
n  <Plug>NERDCommenterComment * :call NERDComment("n", "Comment")<CR>
   <Plug>NERDTreeFocusToggle & :call <SNR>99_NERDTreeFocusToggle()
   <Plug>NERDTreeSteppedClose & :call <SNR>99_NERDTreeSteppedClose()
   <Plug>NERDTreeSteppedOpen & :call <SNR>99_NERDTreeSteppedOpen()
   <Plug>NERDTreeMirrorToggle & :call <SNR>99_NERDTreeMirrorToggle()
   <Plug>NERDTreeMirrorOpen & :call <SNR>99_NERDTreeMirrorOrCreate()
   <Plug>NERDTreeTabsFind & :call <SNR>99_NERDTreeFindFile()
   <Plug>NERDTreeTabsToggle & :call <SNR>99_NERDTreeToggleAllTabs()
   <Plug>NERDTreeTabsClose & :call <SNR>99_NERDTreeCloseAllTabs()
   <Plug>NERDTreeTabsOpen & :call <SNR>99_NERDTreeOpenAllTabs()
   <Plug>CRV_CRefVimInvoke & :call <SNR>71_CRV_CRefVimShowContents()<CR>
   <Plug>CRV_CRefVimAsk & :call <SNR>71_CRV_CRefVimAskForWord()<CR>
n  <Plug>CRV_CRefVimNormal & :call <SNR>71_CRV_CRefVimWord(expand("<cword>"))<CR>
v  <Plug>CRV_CRefVimVisual & y:call <SNR>71_CRV_CRefVimWord('<C-R>"')<CR>
   <Plug>StartSearch * :call <SNR>70_search_compl_start()<CR>/
o  <Plug>(wildfire-quick-select) * :<C-U>call wildfire#QuickSelect({'*': ['i''', 'i"', 'i)', 'i]', 'i}', 'ip'], 'html,xml': ['at']})<CR>
n  <Plug>(wildfire-quick-select) * :<C-U>call wildfire#QuickSelect({'*': ['i''', 'i"', 'i)', 'i]', 'i}', 'ip'], 'html,xml': ['at']})<CR>
v  <Plug>(wildfire-fuel) * :<C-U>call wildfire#Fuel(v:count1)<CR>
o  <Plug>(wildfire-fuel) * :<C-U>call wildfire#Start(v:count1, {'*': ['i''', 'i"', 'i)', 'i]', 'i}', 'ip'], 'html,xml': ['at']})<CR>
n  <Plug>(wildfire-fuel) * :<C-U>call wildfire#Start(v:count1, {'*': ['i''', 'i"', 'i)', 'i]', 'i}', 'ip'], 'html,xml': ['at']})<CR>
v  <Plug>(wildfire-water) * :<C-U>call wildfire#Water(v:count1)<CR>
v  <Plug>SurroundWithSingle * :<C-U>call textobj#quote#surround#surround(0, visualmode())<CR>
n  <Plug>SurroundWithSingle * :call textobj#quote#surround#surround(0, '')<CR>
v  <Plug>SurroundWithDouble * :<C-U>call textobj#quote#surround#surround(1, visualmode())<CR>
n  <Plug>SurroundWithDouble * :call textobj#quote#surround#surround(1, '')<CR>
v  <Plug>ReplaceWithStraight * :<C-U>call textobj#quote#replace#replace(0, visualmode())<CR>
n  <Plug>ReplaceWithStraight * :call textobj#quote#replace#replace(0, '')<CR>
v  <Plug>ReplaceWithCurly * :<C-U>call textobj#quote#replace#replace(1, visualmode())<CR>
n  <Plug>ReplaceWithCurly * :call textobj#quote#replace#replace(1, '')<CR>
o  <Plug>(textobj-indent-i) * :<C-U>call g:__textobj_indent.do_by_function("select-i","-","o")<CR>
v  <Plug>(textobj-indent-i) * :<C-U>call g:__textobj_indent.do_by_function("select-i","-","v")<CR>
o  <Plug>(textobj-indent-a) * :<C-U>call g:__textobj_indent.do_by_function("select-a","-","o")<CR>
v  <Plug>(textobj-indent-a) * :<C-U>call g:__textobj_indent.do_by_function("select-a","-","v")<CR>
o  <Plug>(textobj-indent-same-i) * :<C-U>call g:__textobj_indent.do_by_function("select-i","same","o")<CR>
v  <Plug>(textobj-indent-same-i) * :<C-U>call g:__textobj_indent.do_by_function("select-i","same","v")<CR>
o  <Plug>(textobj-indent-same-a) * :<C-U>call g:__textobj_indent.do_by_function("select-a","same","o")<CR>
v  <Plug>(textobj-indent-same-a) * :<C-U>call g:__textobj_indent.do_by_function("select-a","same","v")<CR>
n  <SNR>46_    * <SNR>46_
x  <Plug>(signify-motion-outer-visual) * :<C-U>call sy#util#hunk_text_object(1)<CR>
o  <Plug>(signify-motion-outer-pending) * :<C-U>call sy#util#hunk_text_object(1)<CR>
x  <Plug>(signify-motion-inner-visual) * :<C-U>call sy#util#hunk_text_object(0)<CR>
o  <Plug>(signify-motion-inner-pending) * :<C-U>call sy#util#hunk_text_object(0)<CR>
n  <Plug>(signify-prev-hunk) * &diff ? '[c' : ":\<C-U>call sy#jump#prev_hunk(v:count1)\<CR>"
n  <Plug>(signify-next-hunk) * &diff ? ']c' : ":\<C-U>call sy#jump#next_hunk(v:count1)\<CR>"
n  <Plug>IndentGuidesDisable & :IndentGuidesDisable<CR>
n  <Plug>IndentGuidesEnable & :IndentGuidesEnable<CR>
n  <Plug>IndentGuidesToggle & :IndentGuidesToggle<CR>
n  <F12>         :set cursorcolumn!|set nocursorcolumn?<CR>
n  <F11>         :set cursorline!|set nocursorline?<CR>
n  <F3>          :set ignorecase!|set ignorecase?<CR>
n  <F2>          :set wrap!|set wrap?<CR>
   <F1>          <Esc>
   <Down>      * gj
   <Up>        * gk
n  <F8>        * :let @/=""<CR>
n  <F4>        * :Bdelete<CR>
   <C-F11>       <Plug>NERDCommenterUncomment
ov <F11>         <Plug>NERDCommenterAlignBoth
n  <C-Tab>     * :EXbalt<CR>
n  <Plug>ManPreGetPage   :call <SNR>7_PreGetPage(0)<CR>
x  <BS>          <Plug>(wildfire-water)
n  Ø           * :EXProjectOpen<CR>:redraw<CR>/
n  Ò           * :EXSymbolList<CR>:redraw<CR>/nd
